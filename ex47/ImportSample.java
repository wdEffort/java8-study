package com.ezen.pb;

import com.ezen.pa.Car; 

/**
 * 임포트(Import)의 원리 이해하기
 * 
 * @author yoman
 * 
 * 2019. 10. 07
 * 
 * Java에서 다른 패키지 안의 클래스를 사용하기 위해서는
 * 클래스 이름 앞에 패키지 이름을 붙여야 한다는 것을 배웠습니다.
 * 
 * 매번 패키지 이름을 붙이는 것은 번거로운 작업입니다.
 * 그럴 때 소스 파일의 앞머리에 임포트 작업을 해 줄 수 있습니다.
 * 
 * [임포트 사용방법]
 * import 패키지명.클래스명;
 * 
 * [패키지의 특징]
 * 1. 패키지 안에 패키지를 만들 수 있습니다.(=> 서브 패키지)
 * 2. 패키지와 서브 패키지는 완전히 다른 패키지로 간주합니다.
 * 
 * [임포트 사용시 주의할 점]
 * import java.io.*;
 * => 패키지 안에 포함된 클래스들을 모두 임포트하라 라는 의미입니다.
 * => 단, 서브 패키지의 클래스까지 읽어들이지 않습니다.
 * => 서브 패키지의 클래스도 가져오려면 각각 별도의 import문을 써야합니다.
 */
public class ImportSample {

	public static void main(String[] args) {
		// 다른 패키지 안의 클래스를 사용하기 위해 임포트 작업을 해줌으로써
		// 클래스 이름만 적어서 사용할 수 있습니다.
		Car car = new Car();
		car.show();

	}

}
